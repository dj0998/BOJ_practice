import java.util.Scanner;
import java.util.Queue;
import java.util.LinkedList;

public class Main {

  static StringBuilder sb;
  static int n;
  static int m;
  static int v;
  static boolean[][] arr;
  static boolean[] visit;
  static Queue<Integer> q;


  
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    q = new LinkedList<>();
    sb = new StringBuilder();
    
    n = sc.nextInt();
    m = sc.nextInt();
    v = sc.nextInt();

    arr = new boolean[n+1][n+1];
    visit = new boolean[n+1];

    for(int i = 0; i < m; i++) {
      int a = sc.nextInt();
      int b = sc.nextInt();
      arr[a][b] = arr[b][a] = true;
    }

    dfs(v);
    sb.append("\n");
    visit = new boolean[n+1];
    bfs(v);
    
    System.out.println(sb);
  }

  static void dfs(int num) {
    visit[num] = true;
    sb.append(num+" ");
    for(int i = 1; i <= n; i++) {
      if(visit[i] == false && arr[num][i]) dfs(i);
    }
  }

  static void bfs(int num) {
    visit[num] = true;
    q.add(num);
    while(!q.isEmpty()) {
      num = q.poll();
      sb.append(num+" ");
      for(int i = 1; i <= n; i++) {
        if(visit[i] == false && arr[num][i]) {
          q.add(i);
          visit[i] = true;
        }
      }
    }
  }
  
}
