import java.util.Scanner;

public class Main {

  static int n;
  static int[][] arr;
  static boolean[][] visit;
  static int[] dx = {1, -1, 0, 0};
  static int[] dy = {0, 0, -1, 1};

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    int max = -1;
    int maxcount = 0;
    n = sc.nextInt();
    arr = new int[n][n];
   
    for(int i = 0; i < n; i++) {
      for(int j = 0; j < n; j++) {
        arr[i][j] = sc.nextInt();
        max = Math.max(max, arr[i][j]);
      }
    }

    for(int k = 0; k <= max; k++) {
      visit = new boolean[n][n];
      int count = 0;
      for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
          if(visit[i][j] == false && arr[i][j] > k) {
            dfs(i, j, k);
            count++;
          }
        }
      }
      maxcount = Math.max(maxcount, count);
    }

    System.out.println(maxcount);
  }

  public static void dfs(int a, int b, int h) {
    visit[a][b] = true;
    for(int i = 0; i < 4; i++) {
      int x = a + dx[i];
      int y = b + dy[i];
      if(x >= 0 && x < n && y >= 0 && y < n) {
        if(visit[x][y] == false && arr[x][y] > h) dfs(x, y, h);
      }
    }
  }
  
}
