import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Main {

  static int n;
  static int count;
  static int[][] arr;
  static boolean[][] visit;
  static int[] dx = {1, -1, 0, 0};
  static int[] dy = {0, 0, -1, 1};
  
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    StringBuilder sb = new StringBuilder();
    ArrayList<Integer> list = new ArrayList<>(); 

    n = sc.nextInt();
    arr = new int[n][n];
    visit = new boolean[n][n];
   

    for(int i = 0; i < n; i++) {
      String s = sc.next();
      for(int j = 0; j < n; j++) {
        arr[i][j] = s.charAt(j) - '0';
      }
    }

    for(int i = 0; i < n; i++) {
      for(int j = 0; j < n; j++) {
        if(arr[i][j] != 0 && visit[i][j] == false) {
          count = 0;
          dfs(i, j);
          list.add(count);
        }
      }
    }

    Collections.sort(list);

    sb.append(list.size()+"\n");

    for(int i = 0; i < list.size(); i++) sb.append(list.get(i)+"\n");
    
    System.out.println(sb);
  }

  public static void dfs(int a, int b) {
    visit[a][b] = true;
    count++;

    for(int i = 0; i < 4; i++) {
      int x = a + dx[i];
      int y = b + dy[i];

      if(x >= 0 && x < n && y >= 0 && y < n) {
        if(arr[x][y] != 0 && visit[x][y] == false) dfs(x, y);
      }
    }
  }
  
}
